{"ast":null,"code":"var _jsxFileName = \"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/chatRoom/VideoChat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { FaRegPaperPlane } from \"react-icons/fa\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport handleAxiosException from \"../exception/handleAxiosException\";\nimport myData from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputPanel = styled.div`\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 60px;    \n    background-color: ${props => props.theme.color.bgColor};\n    border-top: 2px solid #e6d5d5;\n    padding-left: 20px;\n    padding-right: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-shrink: 0;\n`;\n_c = InputPanel;\nconst InputBox = styled.div`\n    height: 50px;\n    background-color: ${props => props.theme.color.bgColor};\n    display: flex;\n    padding: 0px 10px;\n    align-items: center;\n    flex-grow: 1;\n    font-size: 15px;\n    &:hover {\n        cursor: text;\n    }\n`;\n_c2 = InputBox;\nconst InputChat = styled.textarea`\n    resize: none;\n    width: 100%;\n    color: ${props => props.theme.color.textColor};\n    background-color: ${props => props.theme.color.bgColor};\n    border: none;\n    overflow: hidden;\n    vertical-align: middle;\n    font-size: inherit;\n    border-bottom: 1px solid ${props => props.theme.color.borderColor};\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid ${props => props.theme.color.borderColor};\n    }\n`;\n_c3 = InputChat;\nconst SendChatBtn = styled.button`\n    height: 40px;\n    width: 40px;\n    margin-left: 10px;\n    background-color: ${props => props.theme.color.bgColor};\n    color: ${props => props.theme.color.textColor};\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    &:active {\n        background-color: ${props => props.theme.color.clickColor};\n    }\n    &:not(:active) {\n        transition: background-color 0.3s ease-out;\n    }\n`;\n_c4 = SendChatBtn;\nconst MessageBox = styled.div`\n    margin-left: 15px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n`;\n_c5 = MessageBox;\nconst Message = styled.span`\n    font-family: ${props => props.theme.font};\n    color: ${props => props.theme.color.textColor};\n    font-size: 14px;\n`;\n_c6 = Message;\nconst ChatLog = styled.div`\n    overflow: auto;    \n`;\n_c7 = ChatLog;\nconst Video = styled.video.attrs({\n  autoPlay: true,\n  playsInline: true,\n  width: 640,\n  height: 320\n})`\n    width: 100%;\n    height: 100%;\n`;\n_c8 = Video;\nconst Msg = styled.div`\n    position: fixed;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-left: 4px solid #e6d5d5;\n    width: 460px;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: whitesmoke;\n`;\n_c9 = Msg;\nconst VideoGrid = styled.div`\n    height: 980px;\n    width: 1400px;\n    justify-content: center;\n    display: grid;\n    grid-template-columns: repeat(3, 400px);\n    grid-auto-rows: 320px;\n    gap: 3px;\n    padding-right: 460px;\n    padding-top: 10px;\n`;\n_c10 = VideoGrid;\nconst Stream = styled.div`\n    background-color: black;\n`;\n_c11 = Stream;\n\nfunction VideoChat() {\n  _s();\n\n  const videoEl = useRef(null);\n  const {\n    state: roomKey\n  } = useLocation();\n  const stomp = useRef();\n  const inputChat = useRef(null);\n  const [receivedMsg, setReceivedMsg] = useState([]);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [remoteVideos, setRemoteVideos] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const chatLog = useRef(null);\n  const localStream = useRef();\n  const nickname = sessionStorage.getItem(\"nickname\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const from = sessionStorage.getItem(\"username\");\n    const myPeerConnections = new Map();\n    const peerConnectionConfig = {\n      'iceServers': [{\n        'urls': 'stun:stun.stunprotocol.org:3478'\n      }, {\n        'urls': 'stun:stun.l.google.com:19302'\n      }]\n    };\n\n    const uuid = () => {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c === 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    };\n\n    const handleStompConnection = () => {\n      return new Promise((resolve, reject) => {\n        const sessionId = uuid();\n        const ws = new SockJS(`${myData.domain}/stomp`, [], {\n          sessionId: () => {\n            return sessionId;\n          }\n        });\n        stomp.current = Stomp.over(ws);\n        stomp.current.connect({}, () => {\n          var _stomp$current;\n\n          enterRoom(sessionId);\n          (_stomp$current = stomp.current) === null || _stomp$current === void 0 ? void 0 : _stomp$current.subscribe(`/exchange/chat.exchange/room.${roomKey}`, message => {\n            const json = JSON.parse(message.body);\n\n            if (json.type === \"message\") {\n              setReceivedMsg(receivedMsg => [...receivedMsg, `${json.nickname} : ${json.msg}`]);\n            } else if (json.type === \"join\") {\n              if (json.from !== from) {\n                setRemoteStreams(remoteStreams => {\n                  const updated = new Map(remoteStreams);\n                  updated.set(json.streamId, null);\n                  return updated;\n                });\n                makeOffer(json.from);\n              }\n            } else if (json.type === \"offer\") {\n              if (from === json.target) {\n                setRemoteStreams(remoteStreams => {\n                  const updated = new Map(remoteStreams);\n                  updated.set(json.streamId, null);\n                  return updated;\n                });\n                makeAnswer(json.from, json.sdp);\n              }\n            } else if (json.type === \"answer\") {\n              if (from === json.target) {\n                var _myPeerConnections$ge;\n\n                (_myPeerConnections$ge = myPeerConnections.get(json.from)) === null || _myPeerConnections$ge === void 0 ? void 0 : _myPeerConnections$ge.setRemoteDescription(json.sdp);\n              }\n            } else if (json.type === \"ice\") {\n              if (from === json.target) {\n                var _myPeerConnections$ge2;\n\n                (_myPeerConnections$ge2 = myPeerConnections.get(json.from)) === null || _myPeerConnections$ge2 === void 0 ? void 0 : _myPeerConnections$ge2.addIceCandidate(json.iceCandidate);\n              }\n            } else if (json.type === \"leave\") {\n              const myPeerConnection = myPeerConnections.get(json.from);\n\n              if (myPeerConnection) {\n                disconnect(myPeerConnection);\n              }\n\n              setRemoteStreams(remoteStreams => {\n                const updated = new Map(remoteStreams);\n                updated.delete(json.streamId);\n                return updated;\n              });\n            }\n          });\n        });\n        resolve(\"stomp 연결 완료\");\n      });\n    };\n\n    const enterRoom = sessionId => {\n      try {\n        axios.post(`${myData.domain}/api/joinRoom`, {\n          roomKey,\n          sessionId\n        }, {\n          withCredentials: true\n        });\n      } catch (err) {\n        handleAxiosException(err);\n        navigate(\"/\");\n      }\n    };\n\n    const videoConn = async () => {\n      const str = await handleStompConnection();\n\n      try {\n        var _stomp$current2;\n\n        console.log(str);\n\n        if (!videoEl.current) {\n          alert(\"비디오를 불러오는데 실패했습니다.\");\n          window.location.replace(\"/\");\n          return;\n        }\n\n        localStream.current = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: {\n            facingMode: \"user\"\n          }\n        });\n        videoEl.current.srcObject = localStream.current;\n        (_stomp$current2 = stomp.current) === null || _stomp$current2 === void 0 ? void 0 : _stomp$current2.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n          type: \"join\",\n          from,\n          nickname,\n          roomKey,\n          streamId: localStream.current.id\n        }));\n      } catch (err) {\n        var _stomp$current3;\n\n        console.log(err);\n\n        if (!videoEl.current) {\n          alert(\"비디오를 불러오는데 실패했습니다.\");\n          window.location.replace(\"/\");\n          return;\n        }\n\n        localStream.current = new MediaStream();\n        videoEl.current.srcObject = localStream.current;\n        (_stomp$current3 = stomp.current) === null || _stomp$current3 === void 0 ? void 0 : _stomp$current3.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n          type: \"join\",\n          from,\n          nickname,\n          roomKey,\n          streamId: localStream.current.id\n        }));\n      }\n    };\n\n    const makeAnswer = async (target, receivedOffer) => {\n      var _stomp$current4;\n\n      const newPeerConnection = createPeerConnection(target);\n\n      if (!newPeerConnection) {\n        return;\n      }\n\n      await newPeerConnection.setRemoteDescription(receivedOffer);\n      const answer = await newPeerConnection.createAnswer();\n      await newPeerConnection.setLocalDescription(answer);\n      (_stomp$current4 = stomp.current) === null || _stomp$current4 === void 0 ? void 0 : _stomp$current4.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n        type: \"answer\",\n        from,\n        target,\n        sdp: newPeerConnection.localDescription\n      }));\n    };\n\n    const createPeerConnection = target => {\n      if (!localStream.current) {\n        console.log(\"no media\");\n        return null;\n      }\n\n      const newPeerConnection = new RTCPeerConnection(peerConnectionConfig);\n      myPeerConnections.set(target, newPeerConnection);\n\n      newPeerConnection.onicecandidate = data => {\n        var _stomp$current5;\n\n        (_stomp$current5 = stomp.current) === null || _stomp$current5 === void 0 ? void 0 : _stomp$current5.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n          type: \"ice\",\n          from,\n          target,\n          iceCandidate: data.candidate\n        }));\n      };\n\n      newPeerConnection.ontrack = handleTrack;\n      localStream.current.getTracks().forEach(track => {\n        if (!localStream.current) {\n          console.log(\"no media\");\n          return;\n        }\n\n        newPeerConnection.addTrack(track, localStream.current);\n      });\n      return newPeerConnection;\n    };\n\n    const makeOffer = async target => {\n      var _localStream$current;\n\n      const newPeerConnection = createPeerConnection(target);\n\n      if (!newPeerConnection) {\n        return;\n      }\n\n      if (((_localStream$current = localStream.current) === null || _localStream$current === void 0 ? void 0 : _localStream$current.getTracks().length) === 0) {\n        var _stomp$current6;\n\n        const offer = await newPeerConnection.createOffer({\n          offerToReceiveAudio: true,\n          offerToReceiveVideo: true\n        });\n        await newPeerConnection.setLocalDescription(offer);\n        (_stomp$current6 = stomp.current) === null || _stomp$current6 === void 0 ? void 0 : _stomp$current6.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n          type: \"offer\",\n          from,\n          target,\n          streamId: localStream.current.id,\n          sdp: newPeerConnection.localDescription\n        }));\n      } else {\n        newPeerConnection.onnegotiationneeded = async () => {\n          var _stomp$current7, _localStream$current2;\n\n          const offer = await newPeerConnection.createOffer();\n          await newPeerConnection.setLocalDescription(offer);\n          (_stomp$current7 = stomp.current) === null || _stomp$current7 === void 0 ? void 0 : _stomp$current7.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n            type: \"offer\",\n            from,\n            target,\n            streamId: (_localStream$current2 = localStream.current) === null || _localStream$current2 === void 0 ? void 0 : _localStream$current2.id,\n            sdp: newPeerConnection.localDescription\n          }));\n        };\n      }\n    };\n\n    const handleTrack = data => {\n      setRemoteStreams(remoteStreams => {\n        const updated = new Map(remoteStreams);\n        updated.set(data.streams[0].id, data.streams[0]);\n        return updated;\n      });\n    };\n\n    const disconnect = peerConnection => {\n      peerConnection.onicecandidate = null;\n      peerConnection.ontrack = null;\n      peerConnection.onnegotiationneeded = null;\n      peerConnection.close();\n    };\n\n    const leave = () => {\n      var _stomp$current8;\n\n      (_stomp$current8 = stomp.current) === null || _stomp$current8 === void 0 ? void 0 : _stomp$current8.disconnect(() => {\n        var _localStream$current3;\n\n        myPeerConnections.forEach(myPeerConnection => disconnect(myPeerConnection));\n        (_localStream$current3 = localStream.current) === null || _localStream$current3 === void 0 ? void 0 : _localStream$current3.getTracks().forEach(track => {\n          track.stop();\n        });\n      });\n    };\n\n    videoConn();\n    return leave;\n  }, [roomKey, nickname, navigate]);\n  useEffect(() => {\n    if (chatLog.current) {\n      chatLog.current.scrollTop = chatLog.current.scrollHeight;\n    }\n  }, [receivedMsg]);\n  useEffect(() => {\n    setRemoteVideos(remoteVideos => Array.from(remoteStreams.values()).map((remoteStream, idx) => /*#__PURE__*/_jsxDEV(Stream, {\n      children: /*#__PURE__*/_jsxDEV(Video, {\n        ref: video => {\n          if (video) {\n            video.srcObject = remoteStream;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }, this)));\n  }, [remoteStreams]);\n\n  const onEnter = event => {\n    if (event.key === \"Enter\") {\n      var _stomp$current9;\n\n      event.preventDefault();\n      (_stomp$current9 = stomp.current) === null || _stomp$current9 === void 0 ? void 0 : _stomp$current9.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n        type: \"message\",\n        nickname,\n        msg\n      }));\n      setMsg(\"\");\n    }\n  };\n\n  const onChange = event => {\n    setMsg(msg => event.target.value);\n  };\n\n  const onBtnClick = () => {\n    var _stomp$current10;\n\n    (_stomp$current10 = stomp.current) === null || _stomp$current10 === void 0 ? void 0 : _stomp$current10.send(`/chat/room.${roomKey}`, {}, JSON.stringify({\n      type: \"message\",\n      nickname,\n      msg\n    }));\n    setMsg(\"\");\n  };\n\n  const onInputBoxClick = () => {\n    var _inputChat$current;\n\n    (_inputChat$current = inputChat.current) === null || _inputChat$current === void 0 ? void 0 : _inputChat$current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(VideoGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Stream, {\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: videoEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this), remoteVideos]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Msg, {\n      children: [/*#__PURE__*/_jsxDEV(ChatLog, {\n        ref: chatLog,\n        children: receivedMsg.map((msg, idx) => /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n        children: [/*#__PURE__*/_jsxDEV(InputBox, {\n          onClick: onInputBoxClick,\n          children: /*#__PURE__*/_jsxDEV(InputChat, {\n            rows: 1,\n            placeholder: \"\\uBA54\\uC138\\uC9C0\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n            maxLength: 100,\n            required: true,\n            onKeyDown: onEnter,\n            onChange: onChange,\n            value: msg,\n            ref: inputChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SendChatBtn, {\n          onClick: onBtnClick,\n          children: /*#__PURE__*/_jsxDEV(FaRegPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoChat, \"d0+OmA5MHinZ3/pCHjStOP36J7Q=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c12 = VideoChat;\nexport default VideoChat;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"InputPanel\");\n$RefreshReg$(_c2, \"InputBox\");\n$RefreshReg$(_c3, \"InputChat\");\n$RefreshReg$(_c4, \"SendChatBtn\");\n$RefreshReg$(_c5, \"MessageBox\");\n$RefreshReg$(_c6, \"Message\");\n$RefreshReg$(_c7, \"ChatLog\");\n$RefreshReg$(_c8, \"Video\");\n$RefreshReg$(_c9, \"Msg\");\n$RefreshReg$(_c10, \"VideoGrid\");\n$RefreshReg$(_c11, \"Stream\");\n$RefreshReg$(_c12, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","SockJS","Stomp","FaRegPaperPlane","useLocation","useNavigate","axios","handleAxiosException","myData","InputPanel","div","props","theme","color","bgColor","InputBox","InputChat","textarea","textColor","borderColor","SendChatBtn","button","clickColor","MessageBox","Message","span","font","ChatLog","Video","video","attrs","autoPlay","playsInline","width","height","Msg","VideoGrid","Stream","VideoChat","videoEl","state","roomKey","stomp","inputChat","receivedMsg","setReceivedMsg","remoteStreams","setRemoteStreams","Map","remoteVideos","setRemoteVideos","msg","setMsg","chatLog","localStream","nickname","sessionStorage","getItem","navigate","from","myPeerConnections","peerConnectionConfig","uuid","replace","c","r","Math","random","v","toString","handleStompConnection","Promise","resolve","reject","sessionId","ws","domain","current","over","connect","enterRoom","subscribe","message","json","JSON","parse","body","type","updated","set","streamId","makeOffer","target","makeAnswer","sdp","get","setRemoteDescription","addIceCandidate","iceCandidate","myPeerConnection","disconnect","delete","post","withCredentials","err","videoConn","str","console","log","alert","window","location","navigator","mediaDevices","getUserMedia","audio","facingMode","srcObject","send","stringify","id","MediaStream","receivedOffer","newPeerConnection","createPeerConnection","answer","createAnswer","setLocalDescription","localDescription","RTCPeerConnection","onicecandidate","data","candidate","ontrack","handleTrack","getTracks","forEach","track","addTrack","length","offer","createOffer","offerToReceiveAudio","offerToReceiveVideo","onnegotiationneeded","streams","peerConnection","close","leave","stop","scrollTop","scrollHeight","Array","values","map","remoteStream","idx","onEnter","event","key","preventDefault","onChange","value","onBtnClick","onInputBoxClick","focus"],"sources":["/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/chatRoom/VideoChat.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { FaRegPaperPlane } from \"react-icons/fa\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport axios, { AxiosError } from \"axios\";\nimport handleAxiosException from \"../exception/handleAxiosException\";\nimport myData from \"../data/data\";\n\nconst InputPanel = styled.div`\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 60px;    \n    background-color: ${props => props.theme.color.bgColor};\n    border-top: 2px solid #e6d5d5;\n    padding-left: 20px;\n    padding-right: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-shrink: 0;\n`\n\nconst InputBox = styled.div`\n    height: 50px;\n    background-color: ${props => props.theme.color.bgColor};\n    display: flex;\n    padding: 0px 10px;\n    align-items: center;\n    flex-grow: 1;\n    font-size: 15px;\n    &:hover {\n        cursor: text;\n    }\n`\n\nconst InputChat = styled.textarea`\n    resize: none;\n    width: 100%;\n    color: ${props => props.theme.color.textColor};\n    background-color: ${props => props.theme.color.bgColor};\n    border: none;\n    overflow: hidden;\n    vertical-align: middle;\n    font-size: inherit;\n    border-bottom: 1px solid ${props => props.theme.color.borderColor};\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid ${props => props.theme.color.borderColor};\n    }\n`\n\nconst SendChatBtn = styled.button`\n    height: 40px;\n    width: 40px;\n    margin-left: 10px;\n    background-color: ${props => props.theme.color.bgColor};\n    color: ${props => props.theme.color.textColor};\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    &:active {\n        background-color: ${props => props.theme.color.clickColor};\n    }\n    &:not(:active) {\n        transition: background-color 0.3s ease-out;\n    }\n`\n\nconst MessageBox = styled.div`\n    margin-left: 15px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n`\n\nconst Message = styled.span`\n    font-family: ${props => props.theme.font};\n    color: ${props => props.theme.color.textColor};\n    font-size: 14px;\n`\n\nconst ChatLog = styled.div`\n    overflow: auto;    \n`\n\nconst Video = styled.video.attrs({autoPlay: true, playsInline: true, width: 640, height: 320})`\n    width: 100%;\n    height: 100%;\n`\n\nconst Msg = styled.div`\n    position: fixed;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-left: 4px solid #e6d5d5;\n    width: 460px;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: whitesmoke;\n`\n\nconst VideoGrid = styled.div`\n    height: 980px;\n    width: 1400px;\n    justify-content: center;\n    display: grid;\n    grid-template-columns: repeat(3, 400px);\n    grid-auto-rows: 320px;\n    gap: 3px;\n    padding-right: 460px;\n    padding-top: 10px;\n`\n\nconst Stream = styled.div`\n    background-color: black;\n`\n\nfunction VideoChat() {\n\n    const videoEl = useRef<HTMLVideoElement>(null);\n\n    const {state: roomKey} = useLocation();\n\n    const stomp = useRef<Stomp.Client>();\n    \n    const inputChat = useRef<HTMLTextAreaElement>(null);\n    \n    const [receivedMsg, setReceivedMsg] = useState<string[]>([]);\n\n    const [remoteStreams, setRemoteStreams] = useState<Map<string, MediaStream | null>>(new Map<string, MediaStream | null>());\n\n    const [remoteVideos, setRemoteVideos] = useState<JSX.Element[]>([]);\n    \n    const [msg, setMsg] = useState(\"\");\n\n    const chatLog = useRef<HTMLDivElement>(null);\n\n    const localStream = useRef<MediaStream>();\n\n    const nickname = sessionStorage.getItem(\"nickname\");\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\n        const from = sessionStorage.getItem(\"username\");\n\n        const myPeerConnections = new Map<string, RTCPeerConnection>();\n\n        const peerConnectionConfig = {\n            'iceServers': [\n                {'urls': 'stun:stun.stunprotocol.org:3478'},\n                {'urls': 'stun:stun.l.google.com:19302'},\n            ]\n        };\n\n        const uuid = () => {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                var r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n                return v.toString(16);\n            });\n        }\n            \n        const handleStompConnection = () => {\n\n            return new Promise<string>((resolve, reject) => {\n                const sessionId = uuid();\n                const ws = new SockJS(`${myData.domain}/stomp`, [], {\n                    sessionId: () => {\n                        return sessionId;\n                    },\n                });\n                stomp.current = Stomp.over(ws);\n                stomp.current.connect({}, () => {\n                    enterRoom(sessionId);\n                    stomp.current?.subscribe(`/exchange/chat.exchange/room.${roomKey}`, (message) => {\n                        const json = JSON.parse(message.body);\n                        if(json.type === \"message\") {\n                            setReceivedMsg(receivedMsg => [...receivedMsg, `${json.nickname} : ${json.msg}`]);\n                        } else if(json.type === \"join\") {\n                            if(json.from !== from) {\n                                setRemoteStreams(remoteStreams => {\n                                    const updated = new Map<string, MediaStream | null>(remoteStreams);\n                                    updated.set(json.streamId, null);\n                                    return updated;\n                                });\n                                makeOffer(json.from);\n                            }\n                        } else if(json.type === \"offer\") {\n                            if(from === json.target) {\n                                setRemoteStreams(remoteStreams => {\n                                    const updated = new Map<string, MediaStream | null>(remoteStreams);\n                                    updated.set(json.streamId, null);\n                                    return updated;\n                                });\n                                makeAnswer(json.from, json.sdp);\n                            }\n                        } else if(json.type === \"answer\") {\n                            if(from === json.target) {\n                                myPeerConnections.get(json.from)?.setRemoteDescription(json.sdp);\n                            }\n                        } else if(json.type === \"ice\") {\n                            if(from === json.target) {\n                                myPeerConnections.get(json.from)?.addIceCandidate(json.iceCandidate);\n                            }\n                        } else if(json.type === \"leave\") {\n                            const myPeerConnection = myPeerConnections.get(json.from);\n                            if(myPeerConnection) {\n                                disconnect(myPeerConnection);\n                            }\n                            setRemoteStreams(remoteStreams => {\n                                const updated = new Map<string, MediaStream | null>(remoteStreams);\n                                updated.delete(json.streamId);\n                                return updated;\n                            })\n                        }\n                    });\n                })\n                resolve(\"stomp 연결 완료\");\n            });\n        }\n    \n\n        const enterRoom = (sessionId: string) => {\n            try {\n                axios.post(`${myData.domain}/api/joinRoom`, {\n                    roomKey,\n                    sessionId,\n                }, {\n                    withCredentials: true,\n                });\n            } catch(err: unknown | AxiosError) {\n                handleAxiosException(err);\n                navigate(\"/\");\n            }\n        }\n\n        const videoConn = async () => {\n            const str = await handleStompConnection();\n            try{\n                console.log(str)\n                if(!videoEl.current) {\n                    alert(\"비디오를 불러오는데 실패했습니다.\");\n                    window.location.replace(\"/\");\n                    return;\n                }\n                localStream.current = await navigator.mediaDevices.getUserMedia({\n                    audio: true,\n                    video: {\n                        facingMode: \"user\"\n                    },\n                });\n                videoEl.current.srcObject = localStream.current;\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"join\", from, nickname, roomKey, streamId: localStream.current.id}));\n            } catch(err: any) {\n                console.log(err);\n                if(!videoEl.current) {\n                    alert(\"비디오를 불러오는데 실패했습니다.\");\n                    window.location.replace(\"/\");\n                    return;\n                }\n                localStream.current = new MediaStream();\n                videoEl.current.srcObject = localStream.current;\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"join\", from, nickname, roomKey, streamId: localStream.current.id}));\n            }\n        }\n\n        const makeAnswer = async (target: string, receivedOffer: RTCSessionDescriptionInit) => {\n            const newPeerConnection = createPeerConnection(target);\n            if(!newPeerConnection) {\n                return;\n            }\n            await newPeerConnection.setRemoteDescription(receivedOffer);\n            const answer = await newPeerConnection.createAnswer();\n            await newPeerConnection.setLocalDescription(answer);\n            stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"answer\", from, target, sdp: newPeerConnection.localDescription}));\n        }\n\n        const createPeerConnection = (target: string) => {\n            if(!localStream.current) {\n                console.log(\"no media\");\n                return null;\n            }\n            const newPeerConnection = new RTCPeerConnection(peerConnectionConfig);\n            myPeerConnections.set(target, newPeerConnection);\n            newPeerConnection.onicecandidate = (data) => {\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"ice\", from, target, iceCandidate: data.candidate}));\n            }\n            newPeerConnection.ontrack = handleTrack;\n            localStream.current.getTracks().forEach(track => {\n                if(!localStream.current) {\n                    console.log(\"no media\");\n                    return;\n                }\n                newPeerConnection.addTrack(track, localStream.current);\n            });\n            return newPeerConnection;\n        }\n\n        const makeOffer = async (target: string) => {\n            const newPeerConnection = createPeerConnection(target);\n            if(!newPeerConnection) {\n                return;\n            }\n            if(localStream.current?.getTracks().length === 0) {\n                const offer = await newPeerConnection.createOffer({offerToReceiveAudio: true, offerToReceiveVideo: true});\n                await newPeerConnection.setLocalDescription(offer);\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"offer\", from, target, streamId: localStream.current.id, sdp: newPeerConnection.localDescription})); \n            } else {\n                newPeerConnection.onnegotiationneeded = async () => {\n                    const offer = await newPeerConnection.createOffer();\n                    await newPeerConnection.setLocalDescription(offer);\n                    stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"offer\", from, target, streamId: localStream.current?.id, sdp: newPeerConnection.localDescription})); \n                }\n            }\n        }\n\n        const handleTrack = (data: RTCTrackEvent) => {\n            setRemoteStreams(remoteStreams => {\n                const updated = new Map<string, MediaStream | null>(remoteStreams);\n                updated.set(data.streams[0].id, data.streams[0]);\n                return updated;\n            });\n        }\n\n        const disconnect = (peerConnection: RTCPeerConnection) => {\n            peerConnection.onicecandidate = null;\n            peerConnection.ontrack = null;\n            peerConnection.onnegotiationneeded = null;\n            peerConnection.close();\n        }\n\n        const leave = () => {\n            stomp.current?.disconnect(() => {\n                myPeerConnections.forEach(myPeerConnection => disconnect(myPeerConnection));\n                localStream.current?.getTracks().forEach(track => {\n                    track.stop();\n                });\n            });\n        };\n\n        videoConn();\n\n        return leave;\n\n    }, [roomKey, nickname, navigate]);\n    \n    useEffect(() => {\n        if(chatLog.current) {\n            chatLog.current.scrollTop = chatLog.current.scrollHeight;\n        }\n    }, [receivedMsg]);\n\n    useEffect(() => {\n        setRemoteVideos(remoteVideos => Array.from(remoteStreams.values()).map((remoteStream, idx) => \n            <Stream key={idx}>\n                <Video ref={video => {\n                    if(video) {\n                        video.srcObject = remoteStream;\n                    }\n                }} />\n            </Stream>\n        ))\n    }, [remoteStreams]);\n    \n    const onEnter = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if(event.key === \"Enter\") {\n            event.preventDefault();\n            stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"message\", nickname, msg}));\n            setMsg(\"\");\n        }\n    }\n    \n    const onChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setMsg(msg => event.target.value);\n    }\n    \n    const onBtnClick = () => {\n        stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"message\", nickname, msg}));\n        setMsg(\"\");\n    }\n    \n    const onInputBoxClick = () => {\n        inputChat.current?.focus();\n    }\n\n    return (\n        <div>\n            <VideoGrid>\n                <Stream>\n                    <Video ref={videoEl} />\n                </Stream>\n                {remoteVideos}\n            </VideoGrid>\n            <Msg>\n                <ChatLog ref={chatLog}>\n                    {receivedMsg.map((msg, idx) => \n                    <MessageBox key={idx}>\n                        <Message>{msg}</Message>\n                    </MessageBox>)}\n                </ChatLog>\n                <InputPanel>\n                    <InputBox onClick={onInputBoxClick}>\n                        <InputChat rows={1} placeholder=\"메세지를 입력해 주세요\" maxLength={100} required onKeyDown={onEnter} onChange={onChange} value={msg} ref={inputChat}/>\n                    </InputBox>\n                    <SendChatBtn onClick={onBtnClick}><FaRegPaperPlane/></SendChatBtn>\n                </InputPanel>\n            </Msg>\n        </div>\n    );\n}\n\nexport default VideoChat;"],"mappings":"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"},"metadata":{},"sourceType":"module"}