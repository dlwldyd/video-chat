{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/dlwld/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/dlwld/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Users/dlwld/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/dlwld/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/dlwld/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11;import React,{useEffect,useRef,useState}from\"react\";import styled from\"styled-components\";import SockJS from\"sockjs-client\";import Stomp from\"stompjs\";import{FaRegPaperPlane}from\"react-icons/fa\";import{useLocation,useNavigate}from\"react-router\";import axios from\"axios\";import handleAxiosException from\"../exception/handleAxiosException\";import myData from\"../data/data\";import{useRecoilValue}from'recoil';import{nicknameAtom,usernameAtom}from\"../Auth/state\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InputPanel=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: sticky;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    height: 60px;    \\n    background-color: \",\";\\n    border-top: 2px solid #e6d5d5;\\n    padding-left: 20px;\\n    padding-right: 20px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    flex-shrink: 0;\\n\"])),function(props){return props.theme.color.bgColor;});var InputBox=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    height: 50px;\\n    background-color: \",\";\\n    display: flex;\\n    padding: 0px 10px;\\n    align-items: center;\\n    flex-grow: 1;\\n    font-size: 15px;\\n    &:hover {\\n        cursor: text;\\n    }\\n\"])),function(props){return props.theme.color.bgColor;});var InputChat=styled.textarea(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    resize: none;\\n    width: 100%;\\n    color: \",\";\\n    background-color: \",\";\\n    border: none;\\n    overflow: hidden;\\n    vertical-align: middle;\\n    font-size: inherit;\\n    border-bottom: 1px solid \",\";\\n    &:focus {\\n        outline: none;\\n        border-bottom: 2px solid \",\";\\n    }\\n\"])),function(props){return props.theme.color.textColor;},function(props){return props.theme.color.bgColor;},function(props){return props.theme.color.borderColor;},function(props){return props.theme.color.borderColor;});var SendChatBtn=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    height: 40px;\\n    width: 40px;\\n    margin-left: 10px;\\n    background-color: \",\";\\n    color: \",\";\\n    border-radius: 50%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    border: none;\\n    &:active {\\n        background-color: \",\";\\n    }\\n    &:not(:active) {\\n        transition: background-color 0.3s ease-out;\\n    }\\n\"])),function(props){return props.theme.color.bgColor;},function(props){return props.theme.color.textColor;},function(props){return props.theme.color.clickColor;});var MessageBox=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    margin-left: 15px;\\n    height: 30px;\\n    display: flex;\\n    align-items: center;\\n\"])));var Message=styled.span(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    font-family: \",\";\\n    color: \",\";\\n    font-size: 14px;\\n\"])),function(props){return props.theme.font;},function(props){return props.theme.color.textColor;});var ChatLog=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    overflow: auto;    \\n\"])));var Video=styled.video.attrs({autoPlay:true,playsInline:true,width:640,height:320})(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 100%;\\n\"])));var Msg=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n    position: fixed;\\n    right: 0;\\n    top: 0;\\n    bottom: 0;\\n    border-left: 4px solid #e6d5d5;\\n    width: 460px;\\n    height: 100vh;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n    background-color: whitesmoke;\\n\"])));var VideoGrid=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n    height: 980px;\\n    width: 1400px;\\n    justify-content: center;\\n    display: grid;\\n    grid-template-columns: repeat(3, 400px);\\n    grid-auto-rows: 320px;\\n    gap: 3px;\\n    padding-right: 460px;\\n    padding-top: 10px;\\n\"])));var Stream=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n    background-color: black;\\n\"])));function VideoChat(){var videoEl=useRef(null);var _useLocation=useLocation(),roomKey=_useLocation.state;var stomp=useRef();var inputChat=useRef(null);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),receivedMsg=_useState2[0],setReceivedMsg=_useState2[1];var _useState3=useState(new Map()),_useState4=_slicedToArray(_useState3,2),remoteStreams=_useState4[0],setRemoteStreams=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),remoteVideos=_useState6[0],setRemoteVideos=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),msg=_useState8[0],setMsg=_useState8[1];var chatLog=useRef(null);var localStream=useRef();// const nickname = sessionStorage.getItem(\"nickname\");\nvar nickname=useRecoilValue(nicknameAtom);var navigate=useNavigate();var from=useRecoilValue(usernameAtom);useEffect(function(){// const from = sessionStorage.getItem(\"username\");\nvar myPeerConnections=new Map();var peerConnectionConfig={'iceServers':[{'urls':'stun:stun.stunprotocol.org:3478'},{'urls':'stun:stun.l.google.com:19302'}]};/**\n         * UUID로 세션 아이디를 생성하는 함수\n         * @returns \n         */var uuid=function uuid(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==='x'?r:r&0x3|0x8;return v.toString(16);});};/**\n         * STOMP를 연결하고 subscribe 메세지를 보내는 함수\n         */var handleStompConnection=function handleStompConnection(){var _sessionId=uuid();var ws=new SockJS(\"\".concat(myData.domain,\"/stomp\"),[],{sessionId:function sessionId(){return _sessionId;}});stomp.current=Stomp.over(ws);stomp.current.heartbeat.outgoing=1000;stomp.current.heartbeat.incoming=0;stomp.current.connect({},function(){var _stomp$current;enterRoom(_sessionId);(_stomp$current=stomp.current)===null||_stomp$current===void 0?void 0:_stomp$current.subscribe(\"/exchange/chat.exchange/room.\".concat(roomKey),function(message){var json=JSON.parse(message.body);if(json.type===\"message\"){setReceivedMsg(function(receivedMsg){return[].concat(_toConsumableArray(receivedMsg),[\"\".concat(json.nickname,\" : \").concat(json.msg)]);});}else if(json.type===\"join\"){if(json.from!==from){setRemoteStreams(function(remoteStreams){var updated=new Map(remoteStreams);updated.set(json.streamId,null);return updated;});makeOffer(json.from);}}else if(json.type===\"offer\"){if(from===json.target){setRemoteStreams(function(remoteStreams){var updated=new Map(remoteStreams);updated.set(json.streamId,null);return updated;});makeAnswer(json.from,json.sdp);}}else if(json.type===\"answer\"){if(from===json.target){var _myPeerConnections$ge;(_myPeerConnections$ge=myPeerConnections.get(json.from))===null||_myPeerConnections$ge===void 0?void 0:_myPeerConnections$ge.setRemoteDescription(json.sdp);}}else if(json.type===\"ice\"){if(from===json.target){var _myPeerConnections$ge2;(_myPeerConnections$ge2=myPeerConnections.get(json.from))===null||_myPeerConnections$ge2===void 0?void 0:_myPeerConnections$ge2.addIceCandidate(json.iceCandidate);}}else if(json.type===\"leave\"){var myPeerConnection=myPeerConnections.get(json.from);if(myPeerConnection){disconnect(myPeerConnection);}setRemoteStreams(function(remoteStreams){var updated=new Map(remoteStreams);updated.delete(json.streamId);return updated;});}});videoConn();});};/**\n         * 채팅룸 참여 시 서버로 STOMP 세션 아이디를 보내는 함수\n         * @param sessionId 웹소켓 세션 아이디\n         */var enterRoom=function enterRoom(sessionId){try{axios.post(\"\".concat(myData.domain,\"/api/joinRoom\"),{roomKey:roomKey,sessionId:sessionId},{withCredentials:true});}catch(err){handleAxiosException(err);navigate(\"/\");}};/**\n         * 내 컴퓨터의 미디어 스트림을 얻어오고 서버로 join 메세지를 보내는 함수\n         */var videoConn=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _stomp$current2,_stomp$current3;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(videoEl.current){_context.next=5;break;}alert(\"비디오를 불러오는데 실패했습니다.\");window.location.replace(\"/\");return _context.abrupt(\"return\");case 5:_context.next=7;return navigator.mediaDevices.getUserMedia({audio:true,video:{facingMode:\"user\"}});case 7:localStream.current=_context.sent;videoEl.current.srcObject=localStream.current;(_stomp$current2=stomp.current)===null||_stomp$current2===void 0?void 0:_stomp$current2.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"join\",from:from,nickname:nickname,roomKey:roomKey,streamId:localStream.current.id}));_context.next=22;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.log(_context.t0);if(videoEl.current){_context.next=19;break;}alert(\"비디오를 불러오는데 실패했습니다.\");window.location.replace(\"/\");return _context.abrupt(\"return\");case 19:localStream.current=new MediaStream();videoEl.current.srcObject=localStream.current;(_stomp$current3=stomp.current)===null||_stomp$current3===void 0?void 0:_stomp$current3.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"join\",from:from,nickname:nickname,roomKey:roomKey,streamId:localStream.current.id}));case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function videoConn(){return _ref.apply(this,arguments);};}();/**\n         * offer 메세지를 받은 후 answer 생성 후 서버로 answer 메세지를 보내는 함수\n         * @param target offer를 보낸 클라이언트의 username\n         * @param receivedOffer 상대방으로부터 받은 offer\n         */var makeAnswer=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(target,receivedOffer){var _stomp$current4;var newPeerConnection,answer;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:newPeerConnection=createPeerConnection(target);if(newPeerConnection){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:_context2.next=5;return newPeerConnection.setRemoteDescription(receivedOffer);case 5:_context2.next=7;return newPeerConnection.createAnswer();case 7:answer=_context2.sent;_context2.next=10;return newPeerConnection.setLocalDescription(answer);case 10:(_stomp$current4=stomp.current)===null||_stomp$current4===void 0?void 0:_stomp$current4.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"answer\",from:from,target:target,sdp:newPeerConnection.localDescription}));case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function makeAnswer(_x,_x2){return _ref2.apply(this,arguments);};}();/**\n         * offer 메세지를 받은 후 offer 메세지를 보낸 클라이언트와의 peer connection을 생성하고 ice 교환을 위한 이벤트 리스너를 붙이고,\n         * 미디어 트랙을 peer connection에 더하는 ㅎ마수\n         * @param target peer connection에 연결할 상대방의 username\n         */var createPeerConnection=function createPeerConnection(target){if(!localStream.current){console.log(\"no media\");return null;}var newPeerConnection=new RTCPeerConnection(peerConnectionConfig);myPeerConnections.set(target,newPeerConnection);newPeerConnection.onicecandidate=function(data){var _stomp$current5;(_stomp$current5=stomp.current)===null||_stomp$current5===void 0?void 0:_stomp$current5.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"ice\",from:from,target:target,iceCandidate:data.candidate}));};newPeerConnection.ontrack=handleTrack;localStream.current.getTracks().forEach(function(track){if(!localStream.current){console.log(\"no media\");return;}newPeerConnection.addTrack(track,localStream.current);});return newPeerConnection;};/**\n         * 상대방으로 부터 join 메세지를 받았을 때 offer를 생성하고 peer connection을 생성 한 뒤 offer 메세지를 보내는 함수\n         * @param target peer connection로 연결할 상대방의 username\n         */var makeOffer=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(target){var _localStream$current;var newPeerConnection,_stomp$current6,offer;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:newPeerConnection=createPeerConnection(target);if(newPeerConnection){_context4.next=3;break;}return _context4.abrupt(\"return\");case 3:if(!(((_localStream$current=localStream.current)===null||_localStream$current===void 0?void 0:_localStream$current.getTracks().length)===0)){_context4.next=12;break;}_context4.next=6;return newPeerConnection.createOffer({offerToReceiveAudio:true,offerToReceiveVideo:true});case 6:offer=_context4.sent;_context4.next=9;return newPeerConnection.setLocalDescription(offer);case 9:(_stomp$current6=stomp.current)===null||_stomp$current6===void 0?void 0:_stomp$current6.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"offer\",from:from,target:target,streamId:localStream.current.id,sdp:newPeerConnection.localDescription}));_context4.next=13;break;case 12:newPeerConnection.onnegotiationneeded=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var _stomp$current7,_localStream$current2;var offer;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return newPeerConnection.createOffer();case 2:offer=_context3.sent;_context3.next=5;return newPeerConnection.setLocalDescription(offer);case 5:(_stomp$current7=stomp.current)===null||_stomp$current7===void 0?void 0:_stomp$current7.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"offer\",from:from,target:target,streamId:(_localStream$current2=localStream.current)===null||_localStream$current2===void 0?void 0:_localStream$current2.id,sdp:newPeerConnection.localDescription}));case 6:case\"end\":return _context3.stop();}}},_callee3);}));case 13:case\"end\":return _context4.stop();}}},_callee4);}));return function makeOffer(_x3){return _ref3.apply(this,arguments);};}();/**\n         * 상대방으로부터 미디어 스트림을 받았을 때 해당 스트림을 Map에 저장하는 함수\n         */var handleTrack=function handleTrack(data){setRemoteStreams(function(remoteStreams){var updated=new Map(remoteStreams);updated.set(data.streams[0].id,data.streams[0]);return updated;});};/**\n         * peer connection 반대편의 상대방과 연결이 끊겼을 때 peer connection을 초기홯는 함수\n         */var disconnect=function disconnect(peerConnection){peerConnection.onicecandidate=null;peerConnection.ontrack=null;peerConnection.onnegotiationneeded=null;peerConnection.close();};/**\n         * 채팅룸에서 나갈 대 실행하는 함수\n         */var leave=function leave(){var _stomp$current8;(_stomp$current8=stomp.current)===null||_stomp$current8===void 0?void 0:_stomp$current8.disconnect(function(){var _localStream$current3;myPeerConnections.forEach(function(myPeerConnection){return disconnect(myPeerConnection);});(_localStream$current3=localStream.current)===null||_localStream$current3===void 0?void 0:_localStream$current3.getTracks().forEach(function(track){track.stop();});});};handleStompConnection();return leave;},[roomKey,nickname,navigate]);useEffect(function(){if(chatLog.current){chatLog.current.scrollTop=chatLog.current.scrollHeight;}},[receivedMsg]);//Map에 저장된 미디어 스트림을 렌더링하기 위해 배열로 변환\n//useEffect에서 변환하지 않으면 채팅을 칠 때마다 리렌더링 되서 영상이 깜빡거린다.\nuseEffect(function(){setRemoteVideos(function(remoteVideos){return Array.from(remoteStreams.values()).map(function(remoteStream,idx){return/*#__PURE__*/_jsx(Stream,{children:/*#__PURE__*/_jsx(Video,{ref:function ref(video){if(video){video.srcObject=remoteStream;}}})},idx);});});},[remoteStreams]);var onEnter=function onEnter(event){if(event.key===\"Enter\"){var _stomp$current9;event.preventDefault();(_stomp$current9=stomp.current)===null||_stomp$current9===void 0?void 0:_stomp$current9.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"message\",nickname:nickname,msg:msg}));setMsg(\"\");}};var onChange=function onChange(event){setMsg(function(msg){return event.target.value;});};var onBtnClick=function onBtnClick(){var _stomp$current10;(_stomp$current10=stomp.current)===null||_stomp$current10===void 0?void 0:_stomp$current10.send(\"/chat/room.\".concat(roomKey),{},JSON.stringify({type:\"message\",nickname:nickname,msg:msg}));setMsg(\"\");};var onInputBoxClick=function onInputBoxClick(){var _inputChat$current;(_inputChat$current=inputChat.current)===null||_inputChat$current===void 0?void 0:_inputChat$current.focus();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(VideoGrid,{children:[/*#__PURE__*/_jsx(Stream,{children:/*#__PURE__*/_jsx(Video,{ref:videoEl})}),remoteVideos]}),/*#__PURE__*/_jsxs(Msg,{children:[/*#__PURE__*/_jsx(ChatLog,{ref:chatLog,children:receivedMsg.map(function(msg,idx){return/*#__PURE__*/_jsx(MessageBox,{children:/*#__PURE__*/_jsx(Message,{children:msg})},idx);})}),/*#__PURE__*/_jsxs(InputPanel,{children:[/*#__PURE__*/_jsx(InputBox,{onClick:onInputBoxClick,children:/*#__PURE__*/_jsx(InputChat,{rows:1,placeholder:\"\\uBA54\\uC138\\uC9C0\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",maxLength:100,required:true,onKeyDown:onEnter,onChange:onChange,value:msg,ref:inputChat})}),/*#__PURE__*/_jsx(SendChatBtn,{onClick:onBtnClick,children:/*#__PURE__*/_jsx(FaRegPaperPlane,{})})]})]})]});}export default VideoChat;","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","SockJS","Stomp","FaRegPaperPlane","useLocation","useNavigate","axios","handleAxiosException","myData","useRecoilValue","nicknameAtom","usernameAtom","InputPanel","div","props","theme","color","bgColor","InputBox","InputChat","textarea","textColor","borderColor","SendChatBtn","button","clickColor","MessageBox","Message","span","font","ChatLog","Video","video","attrs","autoPlay","playsInline","width","height","Msg","VideoGrid","Stream","VideoChat","videoEl","roomKey","state","stomp","inputChat","receivedMsg","setReceivedMsg","Map","remoteStreams","setRemoteStreams","remoteVideos","setRemoteVideos","msg","setMsg","chatLog","localStream","nickname","navigate","from","myPeerConnections","peerConnectionConfig","uuid","replace","c","r","Math","random","v","toString","handleStompConnection","sessionId","ws","domain","current","over","heartbeat","outgoing","incoming","connect","enterRoom","subscribe","message","json","JSON","parse","body","type","updated","set","streamId","makeOffer","target","makeAnswer","sdp","get","setRemoteDescription","addIceCandidate","iceCandidate","myPeerConnection","disconnect","delete","videoConn","post","withCredentials","err","alert","window","location","navigator","mediaDevices","getUserMedia","audio","facingMode","srcObject","send","stringify","id","console","log","MediaStream","receivedOffer","newPeerConnection","createPeerConnection","createAnswer","answer","setLocalDescription","localDescription","RTCPeerConnection","onicecandidate","data","candidate","ontrack","handleTrack","getTracks","forEach","track","addTrack","length","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","onnegotiationneeded","streams","peerConnection","close","leave","stop","scrollTop","scrollHeight","Array","values","map","remoteStream","idx","onEnter","event","key","preventDefault","onChange","value","onBtnClick","onInputBoxClick","focus"],"sources":["C:/project/video_chat/video-chat-backend/frontend/src/chatRoom/VideoChat.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { FaRegPaperPlane } from \"react-icons/fa\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport axios, { AxiosError } from \"axios\";\nimport handleAxiosException from \"../exception/handleAxiosException\";\nimport myData from \"../data/data\";\nimport { useRecoilValue } from 'recoil';\nimport { nicknameAtom, usernameAtom } from \"../Auth/state\";\n\nconst InputPanel = styled.div`\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 60px;    \n    background-color: ${props => props.theme.color.bgColor};\n    border-top: 2px solid #e6d5d5;\n    padding-left: 20px;\n    padding-right: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-shrink: 0;\n`\n\nconst InputBox = styled.div`\n    height: 50px;\n    background-color: ${props => props.theme.color.bgColor};\n    display: flex;\n    padding: 0px 10px;\n    align-items: center;\n    flex-grow: 1;\n    font-size: 15px;\n    &:hover {\n        cursor: text;\n    }\n`\n\nconst InputChat = styled.textarea`\n    resize: none;\n    width: 100%;\n    color: ${props => props.theme.color.textColor};\n    background-color: ${props => props.theme.color.bgColor};\n    border: none;\n    overflow: hidden;\n    vertical-align: middle;\n    font-size: inherit;\n    border-bottom: 1px solid ${props => props.theme.color.borderColor};\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid ${props => props.theme.color.borderColor};\n    }\n`\n\nconst SendChatBtn = styled.button`\n    height: 40px;\n    width: 40px;\n    margin-left: 10px;\n    background-color: ${props => props.theme.color.bgColor};\n    color: ${props => props.theme.color.textColor};\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    &:active {\n        background-color: ${props => props.theme.color.clickColor};\n    }\n    &:not(:active) {\n        transition: background-color 0.3s ease-out;\n    }\n`\n\nconst MessageBox = styled.div`\n    margin-left: 15px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n`\n\nconst Message = styled.span`\n    font-family: ${props => props.theme.font};\n    color: ${props => props.theme.color.textColor};\n    font-size: 14px;\n`\n\nconst ChatLog = styled.div`\n    overflow: auto;    \n`\n\nconst Video = styled.video.attrs({autoPlay: true, playsInline: true, width: 640, height: 320})`\n    width: 100%;\n    height: 100%;\n`\n\nconst Msg = styled.div`\n    position: fixed;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-left: 4px solid #e6d5d5;\n    width: 460px;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: whitesmoke;\n`\n\nconst VideoGrid = styled.div`\n    height: 980px;\n    width: 1400px;\n    justify-content: center;\n    display: grid;\n    grid-template-columns: repeat(3, 400px);\n    grid-auto-rows: 320px;\n    gap: 3px;\n    padding-right: 460px;\n    padding-top: 10px;\n`\n\nconst Stream = styled.div`\n    background-color: black;\n`\n\nfunction VideoChat() {\n\n    const videoEl = useRef<HTMLVideoElement>(null);\n\n    const {state: roomKey} = useLocation();\n\n    const stomp = useRef<Stomp.Client>();\n    \n    const inputChat = useRef<HTMLTextAreaElement>(null);\n    \n    const [receivedMsg, setReceivedMsg] = useState<string[]>([]);\n\n    const [remoteStreams, setRemoteStreams] = useState<Map<string, MediaStream | null>>(new Map<string, MediaStream | null>());\n\n    const [remoteVideos, setRemoteVideos] = useState<JSX.Element[]>([]);\n    \n    const [msg, setMsg] = useState(\"\");\n\n    const chatLog = useRef<HTMLDivElement>(null);\n\n    const localStream = useRef<MediaStream>();\n\n    // const nickname = sessionStorage.getItem(\"nickname\");\n    const nickname = useRecoilValue(nicknameAtom);\n\n    const navigate = useNavigate();\n    \n    const from = useRecoilValue(usernameAtom);\n\n    useEffect(() => {\n\n        // const from = sessionStorage.getItem(\"username\");\n\n        const myPeerConnections = new Map<string, RTCPeerConnection>();\n\n        const peerConnectionConfig = {\n            'iceServers': [\n                {'urls': 'stun:stun.stunprotocol.org:3478'},\n                {'urls': 'stun:stun.l.google.com:19302'},\n            ]\n        };\n\n        /**\n         * UUID로 세션 아이디를 생성하는 함수\n         * @returns \n         */\n        const uuid = () => {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                var r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n                return v.toString(16);\n            });\n        }\n        \n        /**\n         * STOMP를 연결하고 subscribe 메세지를 보내는 함수\n         */\n        const handleStompConnection = () => {\n            const sessionId = uuid();\n            const ws = new SockJS(`${myData.domain}/stomp`, [], {\n                sessionId: () => {\n                    return sessionId;\n                },\n            });\n            stomp.current = Stomp.over(ws);\n            stomp.current.heartbeat.outgoing = 1000;\n            stomp.current.heartbeat.incoming = 0;\n            stomp.current.connect({}, () => {\n                enterRoom(sessionId);\n                stomp.current?.subscribe(`/exchange/chat.exchange/room.${roomKey}`, (message) => {\n                    const json = JSON.parse(message.body);\n                    if(json.type === \"message\") {\n                        setReceivedMsg(receivedMsg => [...receivedMsg, `${json.nickname} : ${json.msg}`]);\n                    } else if(json.type === \"join\") {\n                        if(json.from !== from) {\n                            setRemoteStreams(remoteStreams => {\n                                const updated = new Map<string, MediaStream | null>(remoteStreams);\n                                updated.set(json.streamId, null);\n                                return updated;\n                            });\n                            makeOffer(json.from);\n                        }\n                    } else if(json.type === \"offer\") {\n                        if(from === json.target) {\n                            setRemoteStreams(remoteStreams => {\n                                const updated = new Map<string, MediaStream | null>(remoteStreams);\n                                updated.set(json.streamId, null);\n                                return updated;\n                            });\n                            makeAnswer(json.from, json.sdp);\n                        }\n                    } else if(json.type === \"answer\") {\n                        if(from === json.target) {\n                            myPeerConnections.get(json.from)?.setRemoteDescription(json.sdp);\n                        }\n                    } else if(json.type === \"ice\") {\n                        if(from === json.target) {\n                            myPeerConnections.get(json.from)?.addIceCandidate(json.iceCandidate);\n                        }\n                    } else if(json.type === \"leave\") {\n                        const myPeerConnection = myPeerConnections.get(json.from);\n                        if(myPeerConnection) {\n                            disconnect(myPeerConnection);\n                        }\n                        setRemoteStreams(remoteStreams => {\n                            const updated = new Map<string, MediaStream | null>(remoteStreams);\n                            updated.delete(json.streamId);\n                            return updated;\n                        })\n                    }\n                });\n                videoConn();\n            })\n        };\n    \n        /**\n         * 채팅룸 참여 시 서버로 STOMP 세션 아이디를 보내는 함수\n         * @param sessionId 웹소켓 세션 아이디\n         */\n        const enterRoom = (sessionId: string) => {\n            try {\n                axios.post(`${myData.domain}/api/joinRoom`, {\n                    roomKey,\n                    sessionId,\n                }, {\n                    withCredentials: true,\n                });\n            } catch(err: unknown | AxiosError) {\n                handleAxiosException(err);\n                navigate(\"/\");\n            }\n        }\n\n        \n        /**\n         * 내 컴퓨터의 미디어 스트림을 얻어오고 서버로 join 메세지를 보내는 함수\n         */\n        const videoConn = async () => {\n            try{\n                if(!videoEl.current) {\n                    alert(\"비디오를 불러오는데 실패했습니다.\");\n                    window.location.replace(\"/\");\n                    return;\n                }\n                localStream.current = await navigator.mediaDevices.getUserMedia({\n                    audio: true,\n                    video: {\n                        facingMode: \"user\"\n                    },\n                });\n                videoEl.current.srcObject = localStream.current;\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"join\", from, nickname, roomKey, streamId: localStream.current.id}));\n            } catch(err: any) {\n                console.log(err);\n                if(!videoEl.current) {\n                    alert(\"비디오를 불러오는데 실패했습니다.\");\n                    window.location.replace(\"/\");\n                    return;\n                }\n                localStream.current = new MediaStream();\n                videoEl.current.srcObject = localStream.current;\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"join\", from, nickname, roomKey, streamId: localStream.current.id}));\n            }\n        }\n\n        /**\n         * offer 메세지를 받은 후 answer 생성 후 서버로 answer 메세지를 보내는 함수\n         * @param target offer를 보낸 클라이언트의 username\n         * @param receivedOffer 상대방으로부터 받은 offer\n         */\n        const makeAnswer = async (target: string, receivedOffer: RTCSessionDescriptionInit) => {\n            const newPeerConnection = createPeerConnection(target);\n            if(!newPeerConnection) {\n                return;\n            }\n            await newPeerConnection.setRemoteDescription(receivedOffer);\n            const answer = await newPeerConnection.createAnswer();\n            await newPeerConnection.setLocalDescription(answer);\n            stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"answer\", from, target, sdp: newPeerConnection.localDescription}));\n        }\n\n        /**\n         * offer 메세지를 받은 후 offer 메세지를 보낸 클라이언트와의 peer connection을 생성하고 ice 교환을 위한 이벤트 리스너를 붙이고,\n         * 미디어 트랙을 peer connection에 더하는 ㅎ마수\n         * @param target peer connection에 연결할 상대방의 username\n         */\n        const createPeerConnection = (target: string) => {\n            if(!localStream.current) {\n                console.log(\"no media\");\n                return null;\n            }\n            const newPeerConnection = new RTCPeerConnection(peerConnectionConfig);\n            myPeerConnections.set(target, newPeerConnection);\n            newPeerConnection.onicecandidate = (data) => {\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"ice\", from, target, iceCandidate: data.candidate}));\n            }\n            newPeerConnection.ontrack = handleTrack;\n            localStream.current.getTracks().forEach(track => {\n                if(!localStream.current) {\n                    console.log(\"no media\");\n                    return;\n                }\n                newPeerConnection.addTrack(track, localStream.current);\n            });\n            return newPeerConnection;\n        }\n\n        /**\n         * 상대방으로 부터 join 메세지를 받았을 때 offer를 생성하고 peer connection을 생성 한 뒤 offer 메세지를 보내는 함수\n         * @param target peer connection로 연결할 상대방의 username\n         */\n        const makeOffer = async (target: string) => {\n            const newPeerConnection = createPeerConnection(target);\n            if(!newPeerConnection) {\n                return;\n            }\n            if(localStream.current?.getTracks().length === 0) {\n                const offer = await newPeerConnection.createOffer({offerToReceiveAudio: true, offerToReceiveVideo: true});\n                await newPeerConnection.setLocalDescription(offer);\n                stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"offer\", from, target, streamId: localStream.current.id, sdp: newPeerConnection.localDescription})); \n            } else {\n                newPeerConnection.onnegotiationneeded = async () => {\n                    const offer = await newPeerConnection.createOffer();\n                    await newPeerConnection.setLocalDescription(offer);\n                    stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"offer\", from, target, streamId: localStream.current?.id, sdp: newPeerConnection.localDescription})); \n                }\n            }\n        }\n\n        /**\n         * 상대방으로부터 미디어 스트림을 받았을 때 해당 스트림을 Map에 저장하는 함수\n         */\n        const handleTrack = (data: RTCTrackEvent) => {\n            setRemoteStreams(remoteStreams => {\n                const updated = new Map<string, MediaStream | null>(remoteStreams);\n                updated.set(data.streams[0].id, data.streams[0]);\n                return updated;\n            });\n        }\n\n        /**\n         * peer connection 반대편의 상대방과 연결이 끊겼을 때 peer connection을 초기홯는 함수\n         */\n        const disconnect = (peerConnection: RTCPeerConnection) => {\n            peerConnection.onicecandidate = null;\n            peerConnection.ontrack = null;\n            peerConnection.onnegotiationneeded = null;\n            peerConnection.close();\n        }\n\n        /**\n         * 채팅룸에서 나갈 대 실행하는 함수\n         */\n        const leave = () => {\n            stomp.current?.disconnect(() => {\n                myPeerConnections.forEach(myPeerConnection => disconnect(myPeerConnection));\n                localStream.current?.getTracks().forEach(track => {\n                    track.stop();\n                });\n            });\n        };\n\n        handleStompConnection();\n\n        return leave;\n\n    }, [roomKey, nickname, navigate]);\n    \n    useEffect(() => {\n        if(chatLog.current) {\n            chatLog.current.scrollTop = chatLog.current.scrollHeight;\n        }\n    }, [receivedMsg]);\n\n    //Map에 저장된 미디어 스트림을 렌더링하기 위해 배열로 변환\n    //useEffect에서 변환하지 않으면 채팅을 칠 때마다 리렌더링 되서 영상이 깜빡거린다.\n    useEffect(() => {\n        setRemoteVideos(remoteVideos => Array.from(remoteStreams.values()).map((remoteStream, idx) => \n            <Stream key={idx}>\n                <Video ref={video => {\n                    if(video) {\n                        video.srcObject = remoteStream;\n                    }\n                }} />\n            </Stream>\n        ))\n    }, [remoteStreams]);\n    \n    const onEnter = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if(event.key === \"Enter\") {\n            event.preventDefault();\n            stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"message\", nickname, msg}));\n            setMsg(\"\");\n        }\n    }\n    \n    const onChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setMsg(msg => event.target.value);\n    }\n    \n    const onBtnClick = () => {\n        stomp.current?.send(`/chat/room.${roomKey}`, {}, JSON.stringify({type: \"message\", nickname, msg}));\n        setMsg(\"\");\n    }\n    \n    const onInputBoxClick = () => {\n        inputChat.current?.focus();\n    }\n\n    return (\n        <div>\n            <VideoGrid>\n                <Stream>\n                    <Video ref={videoEl} />\n                </Stream>\n                {remoteVideos}\n            </VideoGrid>\n            <Msg>\n                <ChatLog ref={chatLog}>\n                    {receivedMsg.map((msg, idx) => \n                    <MessageBox key={idx}>\n                        <Message>{msg}</Message>\n                    </MessageBox>)}\n                </ChatLog>\n                <InputPanel>\n                    <InputBox onClick={onInputBoxClick}>\n                        <InputChat rows={1} placeholder=\"메세지를 입력해 주세요\" maxLength={100} required onKeyDown={onEnter} onChange={onChange} value={msg} ref={inputChat}/>\n                    </InputBox>\n                    <SendChatBtn onClick={onBtnClick}><FaRegPaperPlane/></SendChatBtn>\n                </InputPanel>\n            </Msg>\n        </div>\n    );\n}\n\nexport default VideoChat;"],"mappings":"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"},"metadata":{},"sourceType":"module"}