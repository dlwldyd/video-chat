[{"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/index.tsx":"1","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/App.tsx":"2","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/Auth/Login.tsx":"3","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/Auth/FetchMemberInfo.tsx":"4","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/Auth/ValidateAuth.tsx":"5","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/home/Home.tsx":"6","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/chatRoom/VideoChat.tsx":"7","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/chatRoom/SearchRoom.tsx":"8","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/exception/handleAxiosException.tsx":"9","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/navigator/Nav.tsx":"10","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/modal/ModalForm.tsx":"11","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/data/data.tsx":"12"},{"size":880,"mtime":1656672439453,"results":"13","hashOfConfig":"14"},{"size":804,"mtime":1655640614351,"results":"15","hashOfConfig":"14"},{"size":2681,"mtime":1656757925671,"results":"16","hashOfConfig":"14"},{"size":1483,"mtime":1656757859572,"results":"17","hashOfConfig":"14"},{"size":514,"mtime":1656758020359,"results":"18","hashOfConfig":"14"},{"size":384,"mtime":1654438797041,"results":"19","hashOfConfig":"14"},{"size":16851,"mtime":1656759430407,"results":"20","hashOfConfig":"14"},{"size":11938,"mtime":1656758178106,"results":"21","hashOfConfig":"14"},{"size":606,"mtime":1656758254474,"results":"22","hashOfConfig":"14"},{"size":8630,"mtime":1656421421800,"results":"23","hashOfConfig":"14"},{"size":1289,"mtime":1655622279974,"results":"24","hashOfConfig":"14"},{"size":82,"mtime":1656421158913,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hm6jr4",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/index.tsx",[],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/App.tsx",["65"],[],"import Login from './Auth/Login';\nimport Home from './home/Home';\nimport FetchMemberInfo from './Auth/FetchMemberInfo';\nimport VideoChat from './chatRoom/VideoChat';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport SearchRoom from './chatRoom/SearchRoom';\nimport ValidateAuth from './Auth/ValidateAuth';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home/>} />\n        <Route path='/login' element={<Login/>} />\n        <Route path='/fetch' element={<FetchMemberInfo/>} />\n        <Route path='/video-chat' element={<ValidateAuth element={<VideoChat />} />} />\n        <Route path='/search' element={<ValidateAuth element={<SearchRoom />} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n",[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/Auth/Login.tsx",["66"],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/Auth/FetchMemberInfo.tsx",["67"],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/Auth/ValidateAuth.tsx",[],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/home/Home.tsx",[],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/chatRoom/VideoChat.tsx",["68"],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/chatRoom/SearchRoom.tsx",["69"],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/exception/handleAxiosException.tsx",[],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/navigator/Nav.tsx",["70"],[],"import axios, { AxiosError } from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useState } from 'react';\nimport ModalForm from \"../modal/ModalForm\";\nimport { useNavigate } from \"react-router\";\nimport { FaUserEdit } from \"react-icons/fa\";\nimport handleAxiosException from \"../exception/handleAxiosException\";\nimport myData from \"../data/data\";\n\nconst LeftButtonSet = styled.div`\n    display: flex;\n    width: 320px;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst RightButtonSet = styled.div`\n    display: flex;\n    width: 100px;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nconst NavContainer = styled.nav`\n    position: fixed;\n    height: 60px;\n    left: 0%;\n    right: 0%;\n    top: 0%;\n    background-color: ${props => props.theme.color.navColor};\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    box-shadow: 0px 1px 2px 0.5px #d5c4a1;\n`\n\nconst HomeButton = styled(Link)`\n    font-family: ${props => props.theme.font};;\n    color: ${props => props.theme.color.navTextColor};\n    font-size: 30px;\n    font-weight: bolder;\n    text-decoration: none;\n    margin-right: 35px;\n`\n\nconst LoginButton = styled(Link)`\n    font-family: ${props => props.theme.font};\n    color: ${props => props.theme.color.navTextColor};\n    font-size: 20px;\n    font-weight: normal;\n    text-decoration: none;\n`\n\nconst CreateChatRoom = styled.button`\n    all: unset;\n    font-family: ${props => props.theme.font};\n    font-weight: normal;\n    font-size: 17px;\n    color: #a89984;\n    &:hover {\n        color: #fb4934;\n        cursor: pointer;\n    }\n`\n\nconst SearchChat = styled(Link)`\n    all: unset;\n    font-family: ${props => props.theme.font};\n    font-weight: normal;\n    font-size: 17px;\n    color: #a89984;\n    &:hover {\n        color: #fb4934;\n        cursor: pointer;\n    }\n`\n\nconst LogoutButton = styled(Link)`\n    text-decoration: none;\n    font-family: ${props => props.theme.font};\n    color: ${props => props.theme.color.navTextColor};\n    font-size: 20px;\n    font-weight: normal;\n`\n\nconst ModalContainer = styled.form`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    font-family: ${props => props.theme.font};\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-end;\n`\n\nconst InputSet = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst Label = styled.label`\n    width: 380px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst Input = styled.input`\n    width: 380px;\n    height: 38px;\n    border-radius: 5px;\n    border: 1px solid ${props => props.theme.color.borderColor};\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 17px;\n    &:focus {\n        border: 3px solid #458588;\n        margin-top: 8px;\n        margin-bottom: 8px;\n    }\n`\n\nconst Btn = styled.button`\n    all: unset;\n    border-radius: 10px;\n    background-color: ${props => props.theme.color.btnColor};\n    color: white;\n    font-size: 20px;\n    margin-right: 45px;\n    padding: 5px 20px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst NickNameEdit = styled.div`\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nfunction Nav() {\n\n    const [loginState, setLoginState] = useState(sessionStorage.getItem(\"authenticated\") === \"true\");\n\n    const [createRoomOpen, setCreateRoomOpen] = useState(false);\n\n    const [editNicknameOpen, setEditNicknameOpen] = useState(false);\n\n    const [roomName, setRoomName] = useState(\"\");\n\n    const [password, setPassword] = useState(\"\");\n\n    const [nickname, setNickname] = useState(\"\");\n\n    const [curNickname, setCurNickname] = useState(sessionStorage.getItem(\"nickname\"));\n\n    const navigate = useNavigate();\n\n    const onLogout = () => {\n        const logout = async () => {\n            try {\n                await axios.get(`${myData.domain}/logout`, {\n                    withCredentials: true\n                });\n                sessionStorage.setItem(\"authenticated\", \"false\");\n                sessionStorage.removeItem(\"nickname\");\n                sessionStorage.removeItem(\"email\");\n                sessionStorage.removeItem(\"username\");\n                setLoginState(loginState => false);\n                navigate(\"/\", {replace: true});\n            } catch(err: unknown | AxiosError) {\n                handleAxiosException(err);\n            }\n        }\n        logout();        \n    }\n\n    const onClick = () => {\n        if(!loginState) {\n            navigate(\"/login\");\n        }\n        setCreateRoomOpen(modalOpen => true);\n    }\n\n    const onOpen = () => {\n        if(!loginState) {\n            navigate(\"/login\");\n        }\n        setEditNicknameOpen(editNicknameOpen => true);\n    }\n\n    const onSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        if(roomName === \"\") {\n            alert(\"방 이름을 입력해주세요\");\n        } else {\n            getRoomKey();\n        }\n    }\n\n    const onRoomNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRoomName(roomName => event.target.value);\n    }\n\n    const onNickNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setNickname(nickname => event.target.value);\n    }\n\n    const onPassChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(password => event.target.value);\n    }\n\n    const getRoomKey = async () => {\n        try {\n            const { roomKey } = await (await axios.post(`${myData.domain}/api/createRoom`, {\n                roomName,\n                password,\n            }, {\n                withCredentials: true,\n            })).data;                   \n            navigate(`/video-chat`, {state: roomKey});\n        } catch(err: unknown | AxiosError) {\n            handleAxiosException(err);\n        }\n    }\n    \n    const changeNickname = async () => {\n        try {\n            await axios.get(`${myData.domain}/api/changeNickname?nickname=${nickname}`, {\n                withCredentials: true,\n            });\n            sessionStorage.setItem(\"nickname\", nickname);\n            setCurNickname(nickname => sessionStorage.getItem(\"nickname\"));\n            setEditNicknameOpen(editNicknameOpen => false);\n            setNickname(nickname => \"\");\n        } catch(err: unknown | AxiosError) {\n            handleAxiosException(err);\n        }\n    }\n\n    const onEdit = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        if(nickname === \"\") {\n            alert(\"닉네임을 입력해주세요\");\n        } else {\n            changeNickname();\n        }\n    }\n\n    const createModal = (\n        <ModalContainer action={`${myData.domain}/api/createRoom`} method=\"POST\" onSubmit={onSubmit}>\n            <InputSet>\n                <Label htmlFor=\"roomName\">방 이름</Label>\n                <Input id=\"roomName\" value={roomName} onChange={onRoomNameChange} />\n                <Label htmlFor=\"password\">비밀번호(선택)</Label>\n                <Input id=\"password\" type=\"password\" value={password} onChange={onPassChange} />\n            </InputSet>\n            <Btn type=\"submit\">만들기</Btn>\n        </ModalContainer>\n    );\n\n    const editModal = (\n        <ModalContainer>\n            <InputSet>\n                <Label htmlFor=\"nickname\">현재 닉네임 : {curNickname}</Label>\n                <Input placeholder=\"변경할 닉네임을 입력해주세요\" value={nickname} id=\"nickname\" onChange={onNickNameChange} />\n            </InputSet>\n            <Btn onClick={onEdit}>변경</Btn>\n        </ModalContainer>\n    )\n\n    return (\n        <div>\n            <NavContainer>\n                <LeftButtonSet>\n                    <HomeButton to=\"/\">VChat</HomeButton>\n                    <CreateChatRoom onClick={onClick}>채팅방 생성</CreateChatRoom>\n                    <SearchChat to=\"/search\">채팅참여</SearchChat>\n                </LeftButtonSet>\n                <RightButtonSet>\n                    {loginState ? <NickNameEdit onClick={onOpen}><FaUserEdit color=\"white\" size=\"17px\"/></NickNameEdit> : null}                    \n                    {loginState ? <LogoutButton onClick={onLogout} to=\"/\">Logout</LogoutButton> : <LoginButton to=\"/login\">Login</LoginButton>}\n                </RightButtonSet>\n            </NavContainer>\n            <ModalForm isOpen={createRoomOpen} setIsOpen={setCreateRoomOpen} content={createModal}></ModalForm>\n            <ModalForm isOpen={editNicknameOpen} setIsOpen={setEditNicknameOpen} content={editModal}></ModalForm>\n        </div>\n    );\n}\n\nexport default Nav","/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/modal/ModalForm.tsx",[],[],"/home/dlwldyd/project/video_chat/video-chat-backend/frontend/src/data/data.tsx",[],[],{"ruleId":"71","severity":1,"message":"72","line":9,"column":3,"nodeType":"73","messageId":"74","endLine":9,"endColumn":11},{"ruleId":"71","severity":1,"message":"75","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":7,"column":17,"nodeType":"73","messageId":"74","endLine":7,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},"@typescript-eslint/no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'AxiosError' is defined but never used."]